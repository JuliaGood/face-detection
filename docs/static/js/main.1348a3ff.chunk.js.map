{"version":3,"sources":["components/logo/detect-logo.png","components/logo/Logo.js","components/navigation/Navigation.js","components/signInForm/SignInForm.js","components/registerForm/RegisterForm.js","components/rank/Rank.js","components/imageLinkInput/ImageLinkInput.js","components/faceDetection/FaceDetection.js","App.js","index.js"],"names":["Logo","className","options","max","style","height","width","paddingTop","src","logo","alt","Navigation","props","onRouteChange","isUserSignedIn","onClick","SignInForm","onInputFormChange","onSigninSubmit","id","htmlFor","type","name","autoComplete","onChange","value","RegisterForm","onRegisterSubmit","Rank","currentUser","currentCount","console","log","totalCount","ImageLinkInput","onInputChange","onDetectSubmit","FaceDetection","imageUrl","boxes","map","box","index","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","move","speed","app","Clarifai","App","apiKey","getRegisteredUser","localStorage","getItem","JSON","parse","calculateFaceLocation","receivedData","inputImage","document","getElementById","imageWidth","Number","imageHeight","outputs","data","regions","region","boundingBox","region_info","bounding_box","bottom_row","left_col","right_col","top_row","displayFaceLocation","boxesDots","updateRegUsers","user","email","state","length","setState","prevState","setItem","stringify","event","inputValue","target","userInput","models","predict","FACE_DETECT_MODEL","then","response","catch","error","ourRoute","route","inputName","newUser","password","registeredUsers","find","alert","foundUser","params","this","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.1348a3ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/detect-logo.ff1ff15b.png\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport logo from \"./detect-logo.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => { \r\n  return (\r\n    <div className=\"ma4 mt0 mb0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ max: 55 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img style={{ paddingTop: \"5px\" }} src={logo} alt=\"logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport Logo from \"../logo/Logo\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = (props) => { \r\n  const { onRouteChange, isUserSignedIn } = props;\r\n  if(isUserSignedIn) {\r\n    return (\r\n      <nav className=\"nav-style nav-logo\">\r\n        <Logo/>\r\n        <p \r\n          className=\"f3 link dim black pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signout\")}\r\n        >Sign Out</p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return(\r\n      <nav className=\"nav-style\">\r\n        <p \r\n          className=\"f3 link dim black pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signin\")}\r\n        >Sign In</p>\r\n        <p \r\n          className=\"f3 link dim black pa3 pointer\"\r\n          onClick={() => onRouteChange(\"register\")}\r\n        >Register</p>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst SignInForm = (props) => { \r\n  const { onRouteChange, onInputFormChange, onSigninSubmit } = props;\r\n\r\n  return (\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n    <main className=\"pa4 black-80\">\r\n      <form className=\"measure\">\r\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"email\" name=\"email\"  id=\"email-address\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"password\" name=\"password\"  id=\"password\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n        <div className=\"\">\r\n          <input \r\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"button\" \r\n            value=\"Sign in\" \r\n            onClick={() => onSigninSubmit()}\r\n          />\r\n        </div>\r\n        <div className=\"lh-copy mt3\">\r\n          <p \r\n            className=\"f6 link dim black db pointer\"\r\n            onClick={() => onRouteChange(\"register\")}\r\n          >Register</p>\r\n        </div>\r\n      </form>\r\n    </main>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default SignInForm;\r\n","import React from \"react\";\r\n\r\nconst RegisterForm = (props) => { \r\n  const { onRouteChange, onInputFormChange, onRegisterSubmit } = props;\r\n\r\n  return (\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n    <main className=\"pa4 black-80\">\r\n      <form className=\"measure\">\r\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n          <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"user-name\">Name</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"text\" name=\"name\"  id=\"user-name\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            /> \r\n          </div>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"email\" name=\"email\"  id=\"email-address\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"password\" name=\"password\"  id=\"password\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n        <div className=\"\">\r\n          <input \r\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"button\" \r\n            value=\"Register\" \r\n            onClick={() => onRegisterSubmit()}\r\n          />\r\n        </div>\r\n        <div className=\"lh-copy mt3\">\r\n          <p \r\n            className=\"f6 link dim black db pointer\"\r\n            onClick={() => onRouteChange(\"signin\")}\r\n          >Sign In</p>\r\n        </div>\r\n      </form>\r\n    </main>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = (props) => { \r\n  const { currentUser, currentCount } = props;\r\n  console.log(\"currentCount in Rank \", currentUser);\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"white f3\">\r\n        {`${currentUser.name}, your total number of detected faces is: ${currentUser.totalCount}`} \r\n      </p>\r\n      <p className=\"white f3\">\r\n        {`There are ${currentCount} faces in the current image.`} \r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./ImageLinkInput.css\";\r\n\r\nconst ImageLinkInput = (props) => {\r\n  const { onInputChange, onDetectSubmit } = props;\r\n  \r\n  return (\r\n    <div>\r\n      <p className=\"black f4\">\r\n        {\"This Magic App will detect faces in your pictures. Give it a try.\"}\r\n      </p>\r\n      <div className=\"center\"> \r\n        <div className=\"link-form center pa4 br3 shadow-5\">\r\n          <input \r\n            className=\"f4 pa2 w-70 center\" \r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button \r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple bw0\"\r\n            onClick={onDetectSubmit}\r\n          >Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkInput;\r\n","import React from \"react\";\r\nimport \"./FaceDetection.css\";\r\n\r\nconst FaceDetection = (props) => { \r\n  const { imageUrl, boxes } = props;\r\n  console.log(\"boxes\", boxes);\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"absolute ma4\">\r\n        <img \r\n          id=\"inputImage\"\r\n          src={imageUrl} \r\n          alt=\"detected-face\"\r\n          width=\"650px\"\r\n          height=\"auto\"\r\n        />\r\n        {boxes.map((box, index) => (\r\n          <div \r\n            className=\"bounding-box-style\"\r\n            key={index}\r\n            style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceDetection;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport SignInForm from \"./components/signInForm/SignInForm\";\nimport RegisterForm from \"./components/registerForm/RegisterForm\";\nimport Rank from \"./components/rank/Rank\";\nimport ImageLinkInput from \"./components/imageLinkInput/ImageLinkInput\";\nimport FaceDetection from \"./components/faceDetection/FaceDetection\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 20,\n      density: {\n        enable: true,\n        value_area: 200,\n      },\n    },\n    move: {\n      speed: 1,\n    }\n  },\n};\n\nconst app = new Clarifai.App({\n  apiKey: \"a57180e7e2914b3586f31b7e92ae4149\"\n });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInput: '',\n      imageUrl: '',\n      boxes: [], //point coordinates that we`ve received from response (in the boundingBox)\n      route: 'register',\n      isUserSignedIn: false,\n      currentUser:{}, //signIned = logged user\n      name: '',\n      email: '', //name, email, pasword for FORM-inputs\n      password: '',\n      currentCount: 0, // how many faces have been detected in the img\n    }\n  }\n\n  getRegisteredUser = () => {\n    return localStorage.getItem(\"registeredUsers\") \n    ? JSON.parse(localStorage.getItem(\"registeredUsers\"))\n    : [];\n  }\n\n  calculateFaceLocation = (receivedData) => { //receivedData = that we`ve received from Clarifai`s response: boundingBox for now\n    const inputImage = document.getElementById(\"inputImage\");\n    const imageWidth = Number(inputImage.width);\n    const imageHeight = Number(inputImage.height);\n\n    const boundingBoxes = receivedData.outputs[0].data.regions.map((region) => {\n      const boundingBox = region.region_info.bounding_box;\n      return { // the point coordinates = dots of boundingBox\n        bottomRow: imageHeight - (boundingBox.bottom_row * imageHeight), //1\n        leftCol: boundingBox.left_col * imageWidth, //2\n        rightCol: imageWidth - (boundingBox.right_col * imageWidth), //3\n        topRow: boundingBox.top_row * imageHeight, // 4\n      }\n    })\n    return boundingBoxes;\n  }\n\n  displayFaceLocation = (boxesDots) => { // boxesDots = boundingBoxes\n    const updateRegUsers = this.getRegisteredUser().map((user) => { \n      if (user.email === this.state.currentUser.email) {\n        user.totalCount = user.totalCount + boxesDots.length;\n      }\n      return user;\n    });\n    \n    this.setState((prevState) => ({ \n      // prevState = this.state (currentState)\n      boxes: boxesDots, \n      currentCount: prevState.currentCount + boxesDots.length,\n      currentUser: {...prevState.currentUser, totalCount : prevState.currentUser.totalCount + boxesDots.length}\n    }), () => {\n      localStorage.setItem(\"registeredUsers\", JSON.stringify(updateRegUsers));\n    });\n  }\n\n  onInputChange = (event) => { //user`s input, image Url\n    let inputValue = event.target.value\n    console.log(\"user`s inputValue: \", inputValue)\n    this.setState({ userInput: inputValue });\n  }\n\n  onDetectSubmit = () => {\n    console.log(\"detect btn has cliked\");\n    this.setState({ imageUrl: this.state.userInput, currentCount: 0 });\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, //As the firts parameter we say it WHAT model do we want to use. Clarifai provides this model. \n      this.state.userInput) //the second parameter must be img-url\n      // why userInput, not imageUrl? - its because of the way HOW 'setState' works. \n    .then((response) => {\n      console.log(\"clarifai`s response: \", response);\n      this.displayFaceLocation(this.calculateFaceLocation(response));\n    })\n    .catch ((error) => console.log(error))\n  }\n\n  onRouteChange = (ourRoute) => {\n    if (ourRoute === \"signout\") {\n      this.setState({ isUserSignedIn: false, imageUrl: '', boxes:[], currentCount: 0 })\n    } else if (ourRoute === \"home\") {\n      this.setState({ isUserSignedIn: true })\n    }\n    this.setState({ route: ourRoute });\n  }\n\n  //forms\n  onInputFormChange = (event) => {\n    const inputName = event.target.name; // name, email, password\n    const inputValue = event.target.value;\n    this.setState({ [inputName]: inputValue }); \n  }\n\n  onRegisterSubmit = () => {\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      totalCount: 0, // total amount of detected faces for all time\n    }\n    const registeredUsers = this.getRegisteredUser();\n    const isUserExisted = registeredUsers.find((user) => newUser.email === user.email);\n    if (isUserExisted) {\n      alert(\"this email already exists!\")\n    } else if (newUser.name.length < 3 || newUser.email.length < 3 || newUser.password.length < 3) {\n      alert(\"all inputs must have 3 or more characters\")\n    } else {\n      localStorage.setItem(\"registeredUsers\", JSON.stringify([...registeredUsers, newUser ]))\n      this.setState({ name:'', email:'', password:'' });\n      this.onRouteChange(\"signin\");\n    }    \n  }\n\n  onSigninSubmit = () => {\n    const { email, password } = this.state;\n    const foundUser = this.getRegisteredUser().find((user) => email === user.email);\n    if (foundUser && password === foundUser.password) {\n      this.setState({ currentUser: {...foundUser} }, ()=> {\n        this.setState({ email:'', password:''});\n        this.onRouteChange(\"home\");\n      })\n    } else {\n      alert(\"Wrong email or password!\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Navigation \n          isUserSignedIn={this.state.isUserSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        { this.state.route === \"home\" \n          ? <div>\n              <Rank \n                currentUser={this.state.currentUser} \n                currentCount={this.state.currentCount} \n              />\n              <ImageLinkInput \n                onInputChange={this.onInputChange}\n                onDetectSubmit={this.onDetectSubmit}\n              />\n              <FaceDetection \n                imageUrl={this.state.imageUrl}\n                boxes={this.state.boxes}\n              />\n            </div>\n          : ( this.state.route === \"signin\"\n              ? <SignInForm \n                onRouteChange={this.onRouteChange}\n                onSigninSubmit={this.onSigninSubmit}\n                onInputFormChange={this.onInputFormChange}\n              /> \n              : <RegisterForm \n                onRouteChange={this.onRouteChange} \n                onRegisterSubmit={this.onRegisterSubmit}\n                onInputFormChange={this.onInputFormChange}\n              />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}