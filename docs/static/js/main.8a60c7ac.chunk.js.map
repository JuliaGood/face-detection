{"version":3,"sources":["components/logo/detect-logo.png","components/logo/Logo.js","components/navigation/Navigation.js","components/signInForm/SignInForm.js","components/registerForm/RegisterForm.js","components/rank/Rank.js","components/imageLinkInput/ImageLinkInput.js","components/faceDetection/FaceDetection.js","App.js","index.js"],"names":["Logo","className","options","max","style","height","width","paddingTop","src","logo","alt","Navigation","props","onRouteChange","isUserSignedIn","onClick","SignInForm","onInputFormChange","onSigninSubmit","id","htmlFor","type","name","autoComplete","onChange","value","RegisterForm","onRegisterSubmit","Rank","currentUser","currentCount","console","log","totalCount","ImageLinkInput","onInputChange","onDetectSubmit","FaceDetection","imageUrl","boxes","map","box","index","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","move","speed","App","componentDidMount","signedInUser","localStorage","getItem","length","setState","JSON","parse","getRegisteredUser","calculateFaceLocation","receivedData","inputImage","document","getElementById","imageWidth","Number","imageHeight","outputs","data","regions","region","boundingBox","region_info","bounding_box","bottom_row","left_col","right_col","top_row","displayFaceLocation","boxesDots","updateRegUsers","user","email","state","prevState","setItem","stringify","event","inputValue","target","userInput","fetch","method","body","inputs","image","url","headers","then","response","json","catch","error","ourRoute","removeItem","route","inputName","newUser","password","registeredUsers","find","alert","foundUser","params","this","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.8a60c7ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/detect-logo.ff1ff15b.png\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport logo from \"./detect-logo.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => { \r\n  return (\r\n    <div className=\"ma4 mt0 mb0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ max: 55 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img style={{ paddingTop: \"5px\" }} src={logo} alt=\"logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport Logo from \"../logo/Logo\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = (props) => { \r\n  const { onRouteChange, isUserSignedIn } = props;\r\n  if(isUserSignedIn) {\r\n    return (\r\n      <nav className=\"nav-style nav-logo\">\r\n        <Logo/>\r\n        <p \r\n          className=\"f3 link dim black pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signout\")}\r\n        >Sign Out</p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return(\r\n      <nav className=\"nav-style\">\r\n        <p \r\n          className=\"f3 link dim black pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signin\")}\r\n        >Sign In</p>\r\n        <p \r\n          className=\"f3 link dim black pa3 pointer\"\r\n          onClick={() => onRouteChange(\"register\")}\r\n        >Register</p>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst SignInForm = (props) => { \r\n  const { onRouteChange, onInputFormChange, onSigninSubmit } = props;\r\n\r\n  return (\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n    <main className=\"pa4 black-80\">\r\n      <form className=\"measure\">\r\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"email\" name=\"email\"  id=\"email-address\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"password\" name=\"password\"  id=\"password\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n        <div className=\"\">\r\n          <input \r\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"button\" \r\n            value=\"Sign in\" \r\n            onClick={() => onSigninSubmit()}\r\n          />\r\n        </div>\r\n        <div className=\"lh-copy mt3\">\r\n          <p \r\n            className=\"f6 link dim black db pointer\"\r\n            onClick={() => onRouteChange(\"register\")}\r\n          >Register</p>\r\n        </div>\r\n      </form>\r\n    </main>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default SignInForm;\r\n","import React from \"react\";\r\n\r\nconst RegisterForm = (props) => { \r\n  const { onRouteChange, onInputFormChange, onRegisterSubmit } = props;\r\n\r\n  return (\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n    <main className=\"pa4 black-80\">\r\n      <form className=\"measure\">\r\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n          <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"user-name\">Name</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"text\" name=\"name\"  id=\"user-name\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            /> \r\n          </div>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"email\" name=\"email\"  id=\"email-address\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n              type=\"password\" name=\"password\"  id=\"password\" autoComplete=\"off\"\r\n              onChange={onInputFormChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n        <div className=\"\">\r\n          <input \r\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"button\" \r\n            value=\"Register\" \r\n            onClick={() => onRegisterSubmit()}\r\n          />\r\n        </div>\r\n        <div className=\"lh-copy mt3\">\r\n          <p \r\n            className=\"f6 link dim black db pointer\"\r\n            onClick={() => onRouteChange(\"signin\")}\r\n          >Sign In</p>\r\n        </div>\r\n      </form>\r\n    </main>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = (props) => { \r\n  const { currentUser, currentCount } = props;\r\n  console.log(\"currentCount in Rank \", currentUser);\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"white f3\">\r\n        {`${currentUser.name}, your total number of detected faces is: ${currentUser.totalCount}`} \r\n      </p>\r\n      <p className=\"white f3\">\r\n        {`There are ${currentCount} faces in the current image.`} \r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./ImageLinkInput.css\";\r\n\r\nconst ImageLinkInput = (props) => {\r\n  const { onInputChange, onDetectSubmit } = props;\r\n  \r\n  return (\r\n    <div>\r\n      <p className=\"black f4\">\r\n        {\"This Magic App will detect faces in your pictures. Give it a try.\"}\r\n      </p>\r\n      <div className=\"center\"> \r\n        <div className=\"link-form center pa4 br3 shadow-5\">\r\n          <input \r\n            className=\"f4 pa2 w-70 center\" \r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button \r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple bw0\"\r\n            onClick={onDetectSubmit}\r\n          >Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkInput;\r\n","import React from \"react\";\r\nimport \"./FaceDetection.css\";\r\n\r\nconst FaceDetection = (props) => { \r\n  const { imageUrl, boxes } = props;\r\n  console.log(\"boxes\", boxes);\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"absolute ma4\">\r\n        <img \r\n          id=\"inputImage\"\r\n          src={imageUrl} \r\n          alt=\"detected-face\"\r\n          width=\"650px\"\r\n          height=\"auto\"\r\n        />\r\n        {boxes.map((box, index) => (\r\n          <div \r\n            className=\"bounding-box-style\"\r\n            key={index}\r\n            style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceDetection;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/navigation/Navigation\";\r\nimport SignInForm from \"./components/signInForm/SignInForm\";\r\nimport RegisterForm from \"./components/registerForm/RegisterForm\";\r\nimport Rank from \"./components/rank/Rank\";\r\nimport ImageLinkInput from \"./components/imageLinkInput/ImageLinkInput\";\r\nimport FaceDetection from \"./components/faceDetection/FaceDetection\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 20,\r\n      density: {\r\n        enable: true,\r\n        value_area: 200,\r\n      },\r\n    },\r\n    move: {\r\n      speed: 1,\r\n    }\r\n  },\r\n};\r\n\r\nconst clarifaiApiKey = '50fda2d5a7ee460b9b760b9b040ddc41';\r\nconst clarifaiFaceDetectionModelId = 'face-detection';\r\nconst clarifaiFaceDetectioModelVersion = '6dc7e46bc9124c5c8824be4822abe105';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userInput: '',\r\n      imageUrl: '',\r\n      boxes: [], //point coordinates that we`ve received from response (in the boundingBox)\r\n      route: 'register',\r\n      isUserSignedIn: false,\r\n      currentUser: {}, //signIned = logged user\r\n      name: '',\r\n      email: '', //name, email, pasword for FORM-inputs\r\n      password: '',\r\n      currentCount: 0, // how many faces have been detected in the img\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const signedInUser = localStorage.getItem(\"signedInUser\");\r\n\r\n    if (signedInUser && signedInUser.length) {\r\n      this.setState({ currentUser: {...JSON.parse(signedInUser)}, isUserSignedIn: true });\r\n      this.onRouteChange(\"home\");\r\n    }\r\n  }\r\n\r\n  getRegisteredUser = () => {\r\n    return localStorage.getItem(\"registeredUsers\")\r\n      ? JSON.parse(localStorage.getItem(\"registeredUsers\"))\r\n      : [];\r\n  }\r\n\r\n  calculateFaceLocation = (receivedData) => { //receivedData = that we`ve received from Clarifai`s response: boundingBox for now\r\n    const inputImage = document.getElementById(\"inputImage\");\r\n    const imageWidth = Number(inputImage.width);\r\n    const imageHeight = Number(inputImage.height);\r\n\r\n    const boundingBoxes = receivedData.outputs[0].data.regions.map((region) => {\r\n      const boundingBox = region.region_info.bounding_box;\r\n      return { // the point coordinates = dots of boundingBox\r\n        bottomRow: imageHeight - (boundingBox.bottom_row * imageHeight), //1\r\n        leftCol: boundingBox.left_col * imageWidth, //2\r\n        rightCol: imageWidth - (boundingBox.right_col * imageWidth), //3\r\n        topRow: boundingBox.top_row * imageHeight, // 4\r\n      }\r\n    })\r\n    return boundingBoxes;\r\n  }\r\n\r\n  displayFaceLocation = (boxesDots) => { // boxesDots = boundingBoxes\r\n    const updateRegUsers = this.getRegisteredUser().map((user) => {\r\n      if (user.email === this.state.currentUser.email) {\r\n        user.totalCount = user.totalCount + boxesDots.length;\r\n      }\r\n      return user;\r\n    });\r\n\r\n    this.setState((prevState) => ({\r\n      // prevState = this.state (currentState)\r\n      boxes: boxesDots,\r\n      currentCount: prevState.currentCount + boxesDots.length,\r\n      currentUser: { ...prevState.currentUser, totalCount: prevState.currentUser.totalCount + boxesDots.length }\r\n    }), () => {\r\n      localStorage.setItem(\"registeredUsers\", JSON.stringify(updateRegUsers));\r\n    });\r\n  }\r\n\r\n  onInputChange = (event) => { //user`s input, image Url\r\n    let inputValue = event.target.value\r\n    console.log(\"user`s inputValue: \", inputValue)\r\n    this.setState({ userInput: inputValue });\r\n  }\r\n\r\n  onDetectSubmit = () => {\r\n    console.log(\"detect btn has cliked\");\r\n    this.setState({ imageUrl: this.state.userInput, currentCount: 0 });\r\n    fetch(`https://api.clarifai.com/v2/models/${clarifaiFaceDetectionModelId}/versions/${clarifaiFaceDetectioModelVersion}/outputs`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        inputs: [{\r\n          data: {\r\n            image: {\r\n              url: this.state.userInput\r\n            }\r\n          }\r\n        }]\r\n      }),\r\n      headers: {\r\n        'Authorization': `Key ${clarifaiApiKey}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"clarifai`s response: \", data);\r\n        this.displayFaceLocation(this.calculateFaceLocation(data));\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  onRouteChange = (ourRoute) => {\r\n    if (ourRoute === \"signout\") {\r\n      this.setState({ isUserSignedIn: false, imageUrl: '', boxes: [], currentCount: 0 });\r\n      localStorage.removeItem(\"signedInUser\");\r\n    } else if (ourRoute === \"home\") {\r\n      this.setState({ isUserSignedIn: true })\r\n    }\r\n    this.setState({ route: ourRoute });\r\n  }\r\n\r\n  //forms\r\n  onInputFormChange = (event) => {\r\n    const inputName = event.target.name; // name, email, password\r\n    const inputValue = event.target.value;\r\n    this.setState({ [inputName]: inputValue });\r\n  }\r\n\r\n  onRegisterSubmit = () => {\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      totalCount: 0, // total amount of detected faces for all time\r\n    }\r\n    const registeredUsers = this.getRegisteredUser();\r\n    const isUserExisted = registeredUsers.find((user) => newUser.email === user.email);\r\n    if (isUserExisted) {\r\n      alert(\"this email already exists!\")\r\n    } else if (newUser.name.length < 3 || newUser.email.length < 3 || newUser.password.length < 3) {\r\n      alert(\"all inputs must have 3 or more characters\")\r\n    } else {\r\n      localStorage.setItem(\"registeredUsers\", JSON.stringify([...registeredUsers, newUser]))\r\n      this.setState({ name: '', email: '', password: '' });\r\n      this.onRouteChange(\"signin\");\r\n    }\r\n  }\r\n\r\n  onSigninSubmit = () => {\r\n    const { email, password } = this.state;\r\n    const foundUser = this.getRegisteredUser().find((user) => email === user.email);\r\n    if (foundUser && password === foundUser.password) {\r\n      this.setState({ currentUser: { ...foundUser } }, () => {\r\n        localStorage.setItem(\"signedInUser\", JSON.stringify(foundUser));\r\n        this.setState({ email: '', password: '' });\r\n        this.onRouteChange(\"home\");\r\n      })\r\n    } else {\r\n      alert(\"Wrong email or password!\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Particles className=\"particles\" params={particlesOptions} />\r\n        <Navigation\r\n          isUserSignedIn={this.state.isUserSignedIn}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n        {this.state.route === \"home\"\r\n          ? <div>\r\n            <Rank\r\n              currentUser={this.state.currentUser}\r\n              currentCount={this.state.currentCount}\r\n            />\r\n            <ImageLinkInput\r\n              onInputChange={this.onInputChange}\r\n              onDetectSubmit={this.onDetectSubmit}\r\n            />\r\n            <FaceDetection\r\n              imageUrl={this.state.imageUrl}\r\n              boxes={this.state.boxes}\r\n            />\r\n          </div>\r\n          : (this.state.route === \"signin\"\r\n            ? <SignInForm\r\n              onRouteChange={this.onRouteChange}\r\n              onSigninSubmit={this.onSigninSubmit}\r\n              onInputFormChange={this.onInputFormChange}\r\n            />\r\n            : <RegisterForm\r\n              onRouteChange={this.onRouteChange}\r\n              onRegisterSubmit={this.onRegisterSubmit}\r\n              onInputFormChange={this.onInputFormChange}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}